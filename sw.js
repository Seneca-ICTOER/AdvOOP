(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.4.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.4.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.4.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.4.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"e625f5b3ec4c6fe1ca3f9e016f7723ea","url":"404.html"},{"revision":"ac5166a18b7fe3d90aa9b7f0a3cc4d45","url":"A-Introduction/compilation-and-execution.html"},{"revision":"55d0c29cd065f8182f5524110cb38812","url":"A-Introduction/cpp-building-blocks.html"},{"revision":"4cccdd945e34dba1bc5694e3a5b6d18f","url":"A-Introduction/overview.html"},{"revision":"23b4d50eff62167156f358efde6c7ab8","url":"assets/css/styles.5ebce48d.css"},{"revision":"b1bf1acd9708866d39f09dd95fa5ea54","url":"assets/js/04ec5033.6a28e428.js"},{"revision":"18896ff5e29610cc5a50625ade31df5c","url":"assets/js/07041aed.8d56c3f0.js"},{"revision":"e815a51abe00ab80cac773d16f59e160","url":"assets/js/0e384e19.b0cb8f5a.js"},{"revision":"1cb55348f234c2ae6f51fc0b8e1066de","url":"assets/js/129ae20a.1ca11a6c.js"},{"revision":"d9ba9688085dfadbb92d6be64d89f2fc","url":"assets/js/131.70d52116.js"},{"revision":"26bd11eb3bf3455c65299e284d774a10","url":"assets/js/15a20f2a.e8822423.js"},{"revision":"ade3e3a1db34cffefb1351b6bebc3a29","url":"assets/js/17896441.a3b5fd08.js"},{"revision":"d7af0a08caa5f2cb0923a6e46fc87664","url":"assets/js/17d97401.1dd5ac0d.js"},{"revision":"135e32191951b15125f67b9ed08ccdb0","url":"assets/js/1be78505.f2130a5c.js"},{"revision":"87ba67197ecbf513ce1548f7f422933d","url":"assets/js/2005e4d5.51679776.js"},{"revision":"42a4062efe335c230812dab96c624cf3","url":"assets/js/230.a9b3fe21.js"},{"revision":"83a4dd3de49205c3da0224d7b3647161","url":"assets/js/283.4cf9e352.js"},{"revision":"e1640c275057b3ea11a519a5d40aa1dd","url":"assets/js/335a152a.8062bf32.js"},{"revision":"48af1ddfd2c68b4fbefa53570c429cb1","url":"assets/js/4718124c.b374ecce.js"},{"revision":"eb14f6f73e4838c7ff77a147c7477124","url":"assets/js/4d7ab22d.b0a295b6.js"},{"revision":"b9da09409e7c356b33dc85561b88e59b","url":"assets/js/4ded2802.ceb57d9b.js"},{"revision":"3430b7705e7282e48d3c08aa6f8d90b5","url":"assets/js/50a2f903.7fd93e52.js"},{"revision":"1e9788976f1cd4ddd3022fa1771f5796","url":"assets/js/5d6d29a0.ca1d36b9.js"},{"revision":"e23c992181c7b42041161a65a546d7d2","url":"assets/js/667.35b86768.js"},{"revision":"b3b72c158b49b6e7e0ee787ca46b259d","url":"assets/js/6ecdb084.7e0a0aa1.js"},{"revision":"73a4fdd63c57b1bf9c0f66daec3e752f","url":"assets/js/6edd9ff2.5e4d85c5.js"},{"revision":"1169d21dde1e916a1db01f09d66b1b4c","url":"assets/js/73cefa48.68e3da15.js"},{"revision":"00ad060a144348a921f41041cc26e070","url":"assets/js/75.d516af00.js"},{"revision":"c3a8ac4e217bd42cd8d4608882317970","url":"assets/js/814.dbb6256e.js"},{"revision":"6615c3a151aeff2a0399892e2d237ebc","url":"assets/js/8401227c.84aff474.js"},{"revision":"db217f47d91cda8e93883be5ed3a97fb","url":"assets/js/85493427.06d37770.js"},{"revision":"9006aee38b25fab1d3ce38c144c92e2d","url":"assets/js/935f2afb.bf72d541.js"},{"revision":"2715b8dbad387e277534830183cd6fc2","url":"assets/js/944e1f91.bb876027.js"},{"revision":"9950aa68c091c359a4b818dbfc7faba3","url":"assets/js/96c1f1a2.8eb1bc33.js"},{"revision":"fb6ec9a1a45ea5bcdc545bff260f46f3","url":"assets/js/9e4087bc.3768f9cd.js"},{"revision":"2ad5811d74a4e294319136c503bb17a7","url":"assets/js/a5b178df.04dc3c2a.js"},{"revision":"fe4b3baf7b246ed01fd2e63c67f7289a","url":"assets/js/a6573247.03570cad.js"},{"revision":"dac582d4d18e57742ee352760f69bcec","url":"assets/js/a80ffcf9.a800b5bc.js"},{"revision":"47efad3db84b160d8f74751fbac188ee","url":"assets/js/aa0d2e22.5501f27b.js"},{"revision":"856146e2f52ff57404ac0c45a99fd3f5","url":"assets/js/abdd60e0.385ef8c4.js"},{"revision":"8b4a89eac29019c7dff500acd39f001b","url":"assets/js/ad238542.3f9b242b.js"},{"revision":"e2d780bfb2169568dc0b1da2276f8f40","url":"assets/js/b16ad6ce.91daca0d.js"},{"revision":"332f13db251b9909a3c8e4039652c472","url":"assets/js/b2160f54.67f45de4.js"},{"revision":"3ef70ebcd2e70a5f938e37bd50445ff9","url":"assets/js/b2f554cd.86816a94.js"},{"revision":"da5c9f1281fecb9bcf58023bf6570f7a","url":"assets/js/d456dc5b.0ce85a94.js"},{"revision":"96bffe107299529142889dfe7c38a7ad","url":"assets/js/d4a8d3f9.704031ac.js"},{"revision":"05840a6339bc1a17d32bd5f794996e5c","url":"assets/js/dec842a7.37bc10fe.js"},{"revision":"65f5e6fea320b1768d72b1081b1e50be","url":"assets/js/f65098e1.74a830c5.js"},{"revision":"f254770de624c592b6145d6cacf46cba","url":"assets/js/main.cdf5ecfa.js"},{"revision":"59954155917d5ea7fd0e69de69984f5f","url":"assets/js/runtime~main.a1bf4eb9.js"},{"revision":"bf68990a949366eba0c23ffd8c081932","url":"B-Types/classes-and-scoped-enumerations.html"},{"revision":"ee44e94b03d5672acd28bb354702d932","url":"B-Types/fundamental-types.html"},{"revision":"4739d6282fc0a30e0d01e9f4b700df91","url":"B-Types/pointers-references-and-arrays.html"},{"revision":"4e3fef93d1b8c1f4fe247137773f5f5b","url":"blog/archive.html"},{"revision":"d9da3458a082a02edf0c69c7d7a0b7b9","url":"C-Class-Relationships/class-templates.html"},{"revision":"d22a0980776be5c8fba34d42b9a8c83e","url":"C-Class-Relationships/compositions-aggregations-and-associations.html"},{"revision":"a4d693b0298c24fe6ec85a052fb89b16","url":"C-Class-Relationships/inheritance-and-inclusion-polymorphism.html"},{"revision":"0fe68fe2a2d06e60e53817b9fd3fa6fe","url":"D-Processing/error-handling.html"},{"revision":"21848b0ffbf23347a267d7a39d092eff","url":"D-Processing/expressions.html"},{"revision":"ba3b6b9ead9fae781a9c880900f72791","url":"D-Processing/functions.html"},{"revision":"1d628e3a101811184ac7f7491566ee89","url":"E-STL/algorithms.html"},{"revision":"70b623989918f94455cd7ec7367beb20","url":"E-STL/containers-and-iterations.html"},{"revision":"659de49ad13290a9bb3f63600c672094","url":"E-STL/file-stream-objects.html"},{"revision":"0ae22caf9ca9b990833eb2ebe7b67796","url":"E-STL/standard-library.html"},{"revision":"ce6df98f0c3d574ea4361f419ef3b581","url":"F-MemoryModel/raw-pointers.html"},{"revision":"5510758e978a4b3942b4861f53cc1619","url":"F-MemoryModel/smart-pointers.html"},{"revision":"460fc34cba91d35fa262e450b88a41a8","url":"G-Performance/multithreading.html"},{"revision":"e4a6a461171a955cf7d84f22e05d26fa","url":"G-Performance/thread-classes.html"},{"revision":"169be9c5b0d981bf422c1ea81292fea2","url":"H-Deeper-Detail/arrays-and-pointers.html"},{"revision":"74e4d660237cb32cb087fdd3a4be3eb9","url":"H-Deeper-Detail/bit-wise-expressions.html"},{"revision":"7631d0284c9a42e5bc749bb59d27def8","url":"H-Deeper-Detail/linked-list-technology.html"},{"revision":"de65a73b276a1bba07e3c071619a6ec3","url":"H-Deeper-Detail/multiple-inheritance.html"},{"revision":"3b54188950ef844525ea7d2c550f6618","url":"H-Deeper-Detail/other-topics.html"},{"revision":"a97a0d0b8db48d79aac1da601e5ca981","url":"H-Deeper-Detail/pre-processor-directives.html"},{"revision":"c3ce0409ccc8a36deca9f6a5df311ea6","url":"index.html"},{"revision":"4b91025dfd69a28daaea5e47b7b97846","url":"manifest.json"},{"revision":"4206c414c73d850bb5c9d78f0f4bf5ef","url":"Resources-Appendices/doubly-linked-list.html"},{"revision":"304835df5c514fa15905f67d94312183","url":"Resources-Appendices/platform-io-dependencies.html"},{"revision":"fbf40ea809897c15545ca5e2d1fd7a9b","url":"Resources-Appendices/sample-code-index.html"},{"revision":"fc9b5138a91cf7e1c5cdb44a31d7aa93","url":"Resources-Appendices/sample-code-repository.html"},{"revision":"1508cd0e820e414e19172586a6bdeb60","url":"Resources-Appendices/string-class.html"},{"revision":"e74fccf74795df7bc7c38003ed1b2f36","url":"img/click-to-select-region.png"},{"revision":"7fa1a026116afe175cae818030d4ffc4","url":"img/docusaurus.png"},{"revision":"ef2266bfb84465c731756b58cde0afb8","url":"img/favicon.ico"},{"revision":"22c6eb8088b86099d5a78b5a13f7b24d","url":"img/logo-dark.svg"},{"revision":"8817e00103e8837d17c2758b0ce25c41","url":"img/logo.svg"},{"revision":"2e1cb1ba37fc5ae886ea57248bdb60bd","url":"img/pwa/icon-192x192.png"},{"revision":"a0f8ed72d3d3489353a57a03aeac9b0d","url":"img/pwa/icon-256x256.png"},{"revision":"ab9ed19e2716b5c233d6132d66204d53","url":"img/pwa/icon-384x384.png"},{"revision":"b71acc5b894ccfac0c22eb39a590f2a0","url":"img/pwa/icon-512x512.png"},{"revision":"b9d9189ed8f8dd58e70d9f8b3f693b3e","url":"img/tutorial/docsVersionDropdown.png"},{"revision":"c14bff79aafafca0957ccc34ee026e2c","url":"img/tutorial/localeDropdown.png"},{"revision":"8d04d316f4d1777793ee773fcbf16cea","url":"img/undraw_docusaurus_mountain.svg"},{"revision":"3d3d63efa464a74e2befd1569465ed21","url":"img/undraw_docusaurus_react.svg"},{"revision":"932b535fc71feb29877bc4b9d708b1d0","url":"img/undraw_docusaurus_tree.svg"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});"SKIP_WAITING"===(t.data&&t.data.type)&&self.skipWaiting()}))})()})()})();